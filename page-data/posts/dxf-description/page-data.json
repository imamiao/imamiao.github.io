{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/dxf-description/","result":{"data":{"markdownRemark":{"excerpt":"什么是DXF格式 DXF是AutoCAD(Drawing Interchange Format或者Drawing Exchange Format) 绘图交换文件。DXF 是Autodesk（欧特克）公司开发的用于AutoCAD与其它软件之间进行CAD数据交换的CAD数据文件格式。    说人话：DXF…","html":"<h2 id=\"什么是dxf格式\" style=\"position:relative;\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFdxf%E6%A0%BC%E5%BC%8F\" aria-label=\"什么是dxf格式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是DXF格式</h2>\n<p>DXF是AutoCAD(Drawing Interchange Format或者Drawing Exchange Format) 绘图交换文件。DXF 是Autodesk（欧特克）公司开发的用于AutoCAD与其它软件之间进行CAD数据交换的CAD数据文件格式。   </p>\n<p>说人话：<strong>DXF是一个专门开放给第三方开发者图形数据格式。</strong></p>\n<h2 id=\"为什么选择用dxf格式\" style=\"position:relative;\"><a href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9%E7%94%A8dxf%E6%A0%BC%E5%BC%8F\" aria-label=\"为什么选择用dxf格式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>为什么选择用DXF格式</h2>\n<p>AutoCAD——画图用的，我们都熟悉，常见的保存格式是.dwg，但是DWG是AutoCAD的私有格式，格式细节没有公开，第三方开发者很难下手。<br>\nDXF是Autodesk专门开放给第三方开发者的文件格式，也是受到AutoCAD直接支持的一种格式。开发者想实现自动化绘图的需求，Autodesk官方也是推荐你从DXF入手。    </p>\n<p>而且DXF和DWG并非完全不可转换，<a href=\"https://www.opendesign.com/cn/guestfiles/oda_file_converter\">ODAFileConverter</a>是一个免费的，由ODA组织（偏官方性质的）推出的一个跨文件版本的DWG，DXF文件互转工具，而且<strong>支持命令行</strong>形式的使用。<br>\n哪怕你最终生成的格式必须是DWG的格式，也可以使用上述软件间接地实现你的需求。</p>\n<p>说人话：<strong>DXF和DWG，都是正经的受AutoCAD支持的格式。想实现程序自动化绘图，或者其他需求时，DWG你先别碰，从DXF下手吧。</strong>  </p>\n<h2 id=\"dxf格式文件长啥样\" style=\"position:relative;\"><a href=\"#dxf%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6%E9%95%BF%E5%95%A5%E6%A0%B7\" aria-label=\"dxf格式文件长啥样 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DXF格式文件长啥样</h2>\n<p>我们打开AutoCAD 2020在图纸中只画一个原点在(0,0)，半径为1的圆，保存为.dxf格式，然后用任意文本编辑器打开，你将会看到：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  0\nSECTION\n  2\nHEADER\n  9\n$ACADVER\n  1\nAC1015\n...\n...\nCIRCLE\n  5\n293\n330\n1F\n100\nAcDbEntity\n  8\n0\n100\nAcDbCircle\n 10\n0.0\n 20\n0.0\n 30\n0.0\n 40\n1.0\n  0\nENDSEC\n...\n...\nRTVSPropertyOp62\n 70\n     1\n  0\nENDSEC\n  0\nEOF</code></pre></div>\n<p>首先，你可以看到它是能正常打开的文本格式，你可以直观的查看，编辑它；粗略的浏览下来，能感受到它是有一定格式的。  </p>\n<p>下边我们正式开始看看DXF的组成。  </p>\n<h2 id=\"dxf的组成\" style=\"position:relative;\"><a href=\"#dxf%E7%9A%84%E7%BB%84%E6%88%90\" aria-label=\"dxf的组成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DXF的组成</h2>\n<h3 id=\"dxf中的基本概念\" style=\"position:relative;\"><a href=\"#dxf%E4%B8%AD%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\" aria-label=\"dxf中的基本概念 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DXF中的基本概念</h3>\n<p><code class=\"language-text\">DXF™ 格式是 AutoCAD ® 图形文件中包含的所有信息的一种带标记数据的表示方式。带标记数据是指文件中的每个数据元素前面都带有一个称为组码的整数。组码的值表明了随后的数据元素的类型。还指出了数据元素对于给定对象（或记录）类型的含义。</code> ——<a href=\"https://help.autodesk.com/view/OARX/2021/CHS/?guid=GUID-235B22E0-A567-4CF6-92D3-38A2306D73F3\">《DXF 参考手册》</a></p>\n<p>提取一下，说人话就是：  <strong>组码，就是一个整数，后边跟着的那个就是数据元素；组码+数据元素 = 带标记数据 ; 所有带标记数据之和 = DXF文件</strong>  </p>\n<p>以上边实例最开始那几行为例：   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  0       &lt;- 组码，0表示图元类型的字符串，后边能跟的数据元素是固定的几个，如：SECTION，ENDSEC，EOF...\nSECTION   &lt;- 数据元素，图元类型：SECTION，表示下边是一段的开始（HEADER，CLASSES，ENTITIES...这都算一段，具体看下边整体结构部分）\n\n  2       &lt;- 组码，2表示名称\nHEADER    &lt;- 数据元素，名称：HEADER(和组码含义对应)，代表这一段是HEADER段\n\n  9       &lt;- 组码，9表示变量名称标识符（仅在 DXF 文件的 HEADER 段中使用）\n$ACADVER  &lt;- 数据元素，变量名称：$ACADVER，代表AutoCAD 图形数据库版本号（DXF文件版本号）\n\n  1       &lt;- 组码，1表示下边跟的是$ACADVER变量的值\nAC1015    &lt;- 数据元素，$ACADVER变量值为AC1015，AC1015则代表当前DXF版本为AutoCAD 2000版</code></pre></div>\n<p>对DXF中的基本概念有一些了解之后，接下来我们来看一个DXF文件的整体结构。</p>\n<h3 id=\"dxf整体结构\" style=\"position:relative;\"><a href=\"#dxf%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84\" aria-label=\"dxf整体结构 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DXF整体结构</h3>\n<p>正如一篇文章有题目，章节标题，段落主题，段落内容一样，DXF文件内也是类似的树状结构。  </p>\n<p>搞了个思维导图，看的更清楚一些：</p>\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"display:block;width:725px; height:725px;\" src=\"https://www.processon.com/embed/62666fefe0b34d4baed871b5\"></iframe>  \n<p>上边这个思维导图已经表述的很全面了，简单总结一下：  </p>\n<ol>\n<li>DXF由6部分(段)组成（忽略THUMBNAILIMAGE段），分别是：HEADER段，OBJECTS段，ENTITIES段，BLOCKS段，TABLES段，CLASSES段；</li>\n<li>每一段的开始都会有 <code class=\"language-text\">0  SECTION  2  XXXX</code> 来标识下边是哪一段；</li>\n<li>点，线，圆等图形数据，都定义在ENTITIES段，需要重点关注。   </li>\n</ol>\n<p>既然ENTITIES段对于我们来说最重要，那么下边我们简单分析一下ENTITIES段的内容。</p>\n<h3 id=\"entities段简析\" style=\"position:relative;\"><a href=\"#entities%E6%AE%B5%E7%AE%80%E6%9E%90\" aria-label=\"entities段简析 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ENTITIES段简析</h3>\n<p>ENTITIES段包含了几乎所有图形对象，以一个CIRCLE（圆）和一个LINE（线）为例，我们来看一下ENTITIES的结构，以及图形对象是在ENTITIES段存在的。  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">                         ......\n|----------|-----------------------------------\n|          |                        0           &lt;- 组码\n|          |段头，标志ENTITIES段     SECTION     &lt;- 数据元素，段开始标识\n|          |       的开始              2         &lt;- 组码，段名称\n|          |                        ENTITIES    &lt;- 数据元素，当前段为ENTITIES段\n|          |----------|------------------------ 上边这一部分是定义ENTITIES段\n|          |          |                0         &lt;- 组码\n|          |          |              CIRCLE      &lt;- 数据元素，这是一个圆\n|          |          |                5         &lt;- 组码，句柄（handle），可以理解为一个ID，不能重复\n|          |          |              293         &lt;- 数据元素，句柄值\n|          |          |              330         &lt;- 组码，所有者 BLOCK_RECORD 对象的软指针 ID/句柄\n|          |          |              1F          &lt;- 数据元素，软指针 ID\n|          |          |              100         &lt;- 组码，子类标记 (AcDbEntity)\n|          |          |CIRCLE        AcDbEntity  &lt;- 数据元素，固定为AcDbEntity\n|          |          |  圆            8         &lt;- 组码，图层名\n|          |          |              0           &lt;- 数据元素，图层名：0，代表在0图层（默认图层）上\n|          |          |              100         &lt;- 组码，子类标记 (AcDbCircle)\n|          |          |              AcDbCircle  &lt;- 数据元素，固定为AcDbCircle\n|          |          |               10         &lt;- 组码，中心点X 值\n|          |          |              0.0         &lt;- 数据元素，X 值：0.0\n|          |          |               20         &lt;- 组码，中心点Y 值\n|          |          |              0.0         &lt;- 数据元素，Y 值：0.0\n|          |          |               30         &lt;- 组码，中心点Z 值\n|          |          |              0.0         &lt;- 数据元素，Z 值：0.0\n|          |          |               40         &lt;- 组码，半径\n|ENTITIES段|          |              1.0         &lt;- 数据元素，半径为1\n|  数据    | 图形数据  |-----------------------  上边这一部分完成对CIRCLE（圆）的定义，对圆心(0，0，0)和半径(1)都进行了赋值\n|          |          |             0           &lt;- 组码，\n|          |          |             LINE        &lt;- 数据元素，这是一条线\n|          |          |               5         &lt;- 组码，句柄（handle），可以理解为一个ID，不能重复\n|          |          |             2CC         &lt;- 数据元素，句柄值\n|          |          |             330         &lt;- 组码，所有者 BLOCK_RECORD 对象的软指针 ID/句柄\n|          |          |             1F          &lt;- 数据元素，软指针 ID\n|          |          |             100         &lt;- 组码，子类标记 (AcDbEntity)\n|          |          |             AcDbEntity  &lt;- 数据元素，固定为AcDbEntity\n|          |          |               8         &lt;- 组码，图层名\n|          |          |  LINE       0           &lt;- 数据元素，图层名：0，代表在0图层（默认图层）上\n|          |          |   线        100         &lt;- 组码，子类标记 (AcDbLine)\n|          |          |             AcDbLine    &lt;- 数据元素，固定为AcDbLine\n|          |          |              10         &lt;- 组码，起点X\n|          |          |             3.0         &lt;- 数据元素，起点X=3.0\n|          |          |              20         &lt;- 组码，起点Y\n|          |          |             0.0         &lt;- 数据元素，起点Y=0.0\n|          |          |              30         &lt;- 组码，起点Z\n|          |          |             0.0         &lt;- 数据元素，起点Z=0.0\n|          |          |              11         &lt;- 组码，端点X\n|          |          |             6.0         &lt;- 数据元素，端点X=6.0\n|          |          |              21         &lt;- 组码，端点Y\n|          |          |             6.0         &lt;- 数据元素，端点Y=6.0\n|          |          |              31         &lt;- 组码，端点Z\n|          |          |             0.0         &lt;- 数据元素，端点Z=0.0\n|          |----------|---------------------- 上边这一部分完成对LINE（线）的定义，完成起点(3,0,0)和端点(6,6,0)的赋值\n|          | 段尾，ENTITIES段        0         &lt;- 组码\n|          |     结束               ENDSEC      &lt;- 数据元素，段结束标志\n|----------|--------------------------------- 段结束\n                         ......</code></pre></div>\n<p>这时候问题来了，为什么0下边就要跟CIRCLE，10就代表的圆心X呢？  </p>\n<p>因为它就是这么规定的，如下图所示，100对应子类标记AcDbCircle，10，20，30分别对应圆心的X，Y，Z值。\n<img src=\"https://tva4.sinaimg.cn/large/d87c1362ly1h1pjfoaotqj20w40m4jwu.jpg\" alt=\"image\">   </p>\n<p>所有的组码对应的含义，以及下边所跟值的说明都可以在又臭又长的官方文档中找到答案：<a href=\"https://help.autodesk.com/view/OARX/2021/CHS/?guid=GUID-235B22E0-A567-4CF6-92D3-38A2306D73F3\">《DXF 参考手册》</a>  </p>\n<h2 id=\"结语\" style=\"position:relative;\"><a href=\"#%E7%BB%93%E8%AF%AD\" aria-label=\"结语 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结语</h2>\n<p>看到这里应该对DXF的整体结构有了大概的了解了，DXF格式虽然有点奇怪，但也有规律可循，接下来你就可以对着官方文档去实现自己的需求了。  </p>\n<p>文档：  </p>\n<ul>\n<li>DXF官方文档：<a href=\"https://help.autodesk.com/view/OARX/2021/CHS/?guid=GUID-235B22E0-A567-4CF6-92D3-38A2306D73F3\">https://help.autodesk.com/view/OARX/2021/CHS/?guid=GUID-235B22E0-A567-4CF6-92D3-38A2306D73F3</a>  </li>\n<li>ezdxf文档中DXF介绍部分：<a href=\"https://ezdxf.readthedocs.io/en/stable/dxfinternals/dxftags.html\">https://ezdxf.readthedocs.io/en/stable/dxfinternals/dxftags.html</a>  </li>\n</ul>\n<p>CAD工具：  </p>\n<ul>\n<li>Web端AutoCAD（AutoCAD官方实现，很好用，免费）：<a href=\"https://web.autocad.com/\">https://web.autocad.com/</a>  </li>\n<li>ODAFileConverter（由ODA组织<em>[开放设计联盟，专门提供CAD相关的库，中望CAD底层就是基于它家的库实现的]</em>实现的DXF-DWG转换工具，不同的文件版本之间进行转换，<strong>支持命令行操作，免费</strong>）：<a href=\"https://www.opendesign.com/cn/guestfiles/oda_file_converter\">https://www.opendesign.com/cn/guestfiles/oda_file_converter</a></li>\n</ul>\n<p>几个DXF读写库：</p>\n<ul>\n<li>C#，netDxf:<a href=\"https://github.com/haplokuon/netDxf\">https://github.com/haplokuon/netDxf</a></li>\n<li>Python，ezdxf:<a href=\"https://github.com/mozman/ezdxf\">https://github.com/mozman/ezdxf</a>  </li>\n<li>TS，dxf-parser:<a href=\"https://github.com/gdsestimating/dxf-parser\">https://github.com/gdsestimating/dxf-parser</a>  </li>\n<li>JS，skymakerolof/dxf:<a href=\"https://github.com/skymakerolof/dxf\">https://github.com/skymakerolof/dxf</a></li>\n</ul>\n<hr>\n<blockquote>\n<p>本文完</p>\n</blockquote>","tableOfContents":"<ul>\n<li><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFdxf%E6%A0%BC%E5%BC%8F\">什么是DXF格式</a></li>\n<li><a href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9%E7%94%A8dxf%E6%A0%BC%E5%BC%8F\">为什么选择用DXF格式</a></li>\n<li><a href=\"#dxf%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6%E9%95%BF%E5%95%A5%E6%A0%B7\">DXF格式文件长啥样</a></li>\n<li>\n<p><a href=\"#dxf%E7%9A%84%E7%BB%84%E6%88%90\">DXF的组成</a></p>\n<ul>\n<li><a href=\"#dxf%E4%B8%AD%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">DXF中的基本概念</a></li>\n<li><a href=\"#dxf%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84\">DXF整体结构</a></li>\n<li><a href=\"#entities%E6%AE%B5%E7%AE%80%E6%9E%90\">ENTITIES段简析</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%BB%93%E8%AF%AD\">结语</a></li>\n</ul>","fields":{"date":"2022-04-25"},"frontmatter":{"title":"用人话说说AutoCAD的DXF格式","description":"DWG和DXF是AutoCAD最常用的两种数据保存格式，DWG是AutoCAD的私有格式，DXF是Autodesk公司开发的用于AutoCAD与其它软件之间进行CAD数据交换的CAD数据文件格式。DXF天生就是面向第三方开发者的，公开的文件格式，开发者想实现自动化绘图，从DXF入手无疑是最好的选择。","tags":["AutoCAD","DXF","技术","中文"],"image":"https://source.unsplash.com/9aSH7CauB9Y/1920x1080","noComments":false}}},"pageContext":{"slug":"/posts/dxf-description/","previous":{"fields":{"slug":"/posts/he-tang-yue-se/"},"frontmatter":{"title":"荷塘月色"}},"next":null,"dateFormat":"YYYY-MM-DD"}},"staticQueryHashes":["3250557336","3788958598"]}